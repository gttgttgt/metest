#include "pch.h"

TEST(TestCaseName, TestName) {
  EXPECT_EQ(1, 1);
  EXPECT_TRUE(true);
}


//３）メモリ管理
//・ポインタ、スタック、ヒープ（配列）
//教材：
//文字列操作
//・"HelloWorld!"の"o"を置き換えてみる。
//		操作パターン
//			文字数同じ　HelloWorld!→HelloJapan?
//			文字数減少　HelloWorld!→ByeWorld!
//			文字数増加　HelloWorld!→Hello!World!
//		実装のパターン
//			C
//				自力で書く
//					関数内で閉じる（操作前Print→操作後Printを一つの関数に）
//				ダメな例を直す?
//					文字列リテラル自体を編集する　→編集後どうなるかも
//					メモリ確保して解放しない
//					メモリ量が足りない
//					スタック
//			C++
//・同じ位置を指し示す
//・文字列リテラル
//・わざと2重開放するプログラムを見せて、悪いところを指摘させる。
//・例外処理との組み合わせ（try - catch）
//・値渡し、参照渡し
//・スライシング
//
//目標レベル：
//ポインタを介してメモリを直接操作できる。
//確保と解放のお作法を身に着ける。
//
//・リスト、STL
//⇒ これは自己学習してもらう。
//
//・Tips：ガベージコレクション
//⇒ Disposalパターンくらいは知ってもらう。
//
//・ツールによる解析ノウハウ
//⇒ これはまず整理、体系化するところから。
//⇒ 次のステップにまわす。
//
//
//
//
//スタック・ヒープ
//確保解放
//malloc / free new / delete new[] / delete[]
//NULL　不定
//理想